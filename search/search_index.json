{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documenta\u00e7\u00e3o da Cria\u00e7\u00e3o de um Ambiente de Dados utilizando (WSL, Pyenv, Poetry, DuckDB, MKDocs) 1\u00ba Primeira Etapa: Instal\u00e7a\u00e7\u00e3o do WSL, Pyenv e Poetry Guia de como instalar o WSL para utiliza\u00e7\u00e3o do Pyenv e Poetry em projetos de Desenvolvimento e/ou Dados 1.O primeiro passo a ser realizado e fazer a instala\u00e7\u00e3o do WSL no seu Windows: 2. Abra o CMD do seu Windows, pode ser utilizado o atalho Windows + R para abrir a op\u00e7\u00e3o de executar e digitar cmd. Com CMD aberto fa\u00e7a wsl --install wsl --update Ap\u00f3s estas etapas voc\u00ea deve reiniciar o computador, ap\u00f3s reiniciar o computador o pronpt de instala\u00e7\u00e3o do Ubuntu ir\u00e1 abrir automaticamente para definir nome do usu\u00e1rio do WSL(Ubuntu) E senha. Outra forma de instalar \u00e9 atrav\u00e9s da Microsoft Store, procurando a distro do seu interesse. Agora vamos as instala\u00e7\u00f5es das depend\u00eancias para o pyenv e poentry. Primeiro vamos dar um update no Linux. sudo apt-get update Ap\u00f3s finaliza\u00e7\u00e3o da atualiza\u00e7\u00e3o voc\u00ea vai instalar os pacotes do linux necess\u00e1rios sudo apt install -y build-essential git libexpat1-dev libssl-dev zlib1g-dev \\ libncurses5-dev libbz2-dev liblzma-dev \\ libsqlite3-dev libffi-dev tcl-dev linux-headers-generic libgdbm-dev \\ libreadline-dev tk tk-dev Ap\u00f3s finaliza\u00e7\u00e3o da deped\u00eancias, voc\u00ea deve clonar o pyenv curl https://pyenv.run | bash Agora vamos configurar o pyenv para carregar automaticamente no terminal echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc**** E utilizar o exec \"$SHELL\" para reiniciar o Shell, para atualizar as ultimas configura\u00e7\u00f5es Agora \u00e9 propriamente a etapa de configura\u00e7\u00e3o do pyenv: -Voc\u00ea pode utilizar o comando pyenv versions para verificar todas as vers\u00f5es de python instaladas; -Voc\u00ea pode utilizar o comando pyenv install -l para listar todas as vers\u00f5es que est\u00e3o dispon\u00edveis para instala\u00e7\u00e3o; -Voc\u00ea pode utilizar o comando pyenv install X.X para instalar a vers\u00e3o desejado (X.X seria a vers\u00e3o desejada. Ex: 3.11.7); -Voc\u00ea pode utilizar o comando pyenv global X.X para definir a vers\u00e3o desejada como global; -Voc\u00ea pode utilizar o comando pyenv local X.X para definir a vers\u00e3o desejada como local; Agora vamos instalar o pyenv: Voc\u00ea deve rodar o comando pyenv local X.X Para iniciar um projeto utilizando o poetry voc\u00ea pode usar o comando poetry new projeto , sendo projeto o nome que voc\u00ea deseja colocar Voc\u00ea pode acessar a pasta do seu projeto cd projeto , para ap\u00f3s rodar o comando code . assim voc\u00ea vai instalar um pacote que fara a conex\u00e3o do Visual Studio Code com seu WSL, para isso voc\u00ea deve ter o Visual Studio Code instalado no seu Windows, como tamb\u00e9m a exten\u00e7\u00e3o WSL . Posteriormente voc\u00ea pode utilizar o comando poetry config virtualenvs.in-project true , voc\u00ea est\u00e1 dizendo para o poetry que a pasta do ambiente virtual ficar\u00e1 dentro da pasta do projeto. Finalmente voc\u00ea pode utilizar o poetry shell para iniciar o ambiente virtual. Com isso voc\u00ea est\u00e1 pronto para come\u00e7ar o seu projeto. Espero que tenha ajudado Para construir esse passo-a-passo segui os seguintes sites: - https://github.com/pyenv/pyenv - https://github.com/pyenv/pyenv Fiz tamb\u00e9m um v\u00eddeo mostrando o lado pr\u00e1tico deste no Youtube: Assista e esse v\u00eddeo 2\u00ba Segunda Etapa: Instala\u00e7\u00e3o do DuckDB Para est\u00e1 etapa vou compartilhar um reposit\u00f3rio do Kaio Silva, que est\u00e1 explicando de forma simples e sensacional o passo-a-passo de isntala\u00e7\u00e3o: https://github.com/kaiohp/duckdb-on-linux 3\u00ba Terceira Etapa: Instala\u00e7\u00e3o do MkDocs -Instalando o MkDocs Para instalar o MkDocs \u00e9 bem simples basta voc\u00ea rodar o seguinte comando: poetry add mkdocs --dev -Configurando Basicamente voc\u00ea vai criar uma documenta\u00e7\u00e3o em MarkDown, para documentar todo seu projeto: Aqui est\u00e1 a Documenta\u00e7\u00e3o Para iniciar o uso do MkDocs, voc\u00ea deve rodar o comando poetry run mkdocs new . Basicamente ele vai criar uma estrutura de arquivos na pasta do seu projeto Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. No arquivo mkdocs.yml \u00e9 a pesonaliza\u00e7\u00e3o da configura\u00e7\u00e3o do site(MkDocs) e na pasta docs voc\u00ea vai configurar as p\u00e1ginas. Assim voc\u00ea pode executar localmente a visualiza\u00e7\u00e3o da sua documenta\u00e7\u00e3o poetry run mkdocs serve Quando voc\u00ea construir da maneira que deseja, utilize o comando poetry run mkdocs build","title":"Config. Ambiente"},{"location":"#documentacao-da-criacao-de-um-ambiente-de-dados-utilizando-wsl-pyenv-poetry-duckdb-mkdocs","text":"","title":"Documenta\u00e7\u00e3o da Cria\u00e7\u00e3o de um Ambiente de Dados utilizando (WSL, Pyenv, Poetry, DuckDB, MKDocs)"},{"location":"#1o-primeira-etapa-instalcacao-do-wsl-pyenv-e-poetry","text":"","title":"1\u00ba Primeira Etapa: Instal\u00e7a\u00e7\u00e3o do WSL, Pyenv e Poetry"},{"location":"#guia-de-como-instalar-o-wsl-para-utilizacao-do-pyenv-e-poetry-em-projetos-de-desenvolvimento-eou-dados","text":"1.O primeiro passo a ser realizado e fazer a instala\u00e7\u00e3o do WSL no seu Windows: 2. Abra o CMD do seu Windows, pode ser utilizado o atalho Windows + R para abrir a op\u00e7\u00e3o de executar e digitar cmd. Com CMD aberto fa\u00e7a wsl --install wsl --update Ap\u00f3s estas etapas voc\u00ea deve reiniciar o computador, ap\u00f3s reiniciar o computador o pronpt de instala\u00e7\u00e3o do Ubuntu ir\u00e1 abrir automaticamente para definir nome do usu\u00e1rio do WSL(Ubuntu) E senha. Outra forma de instalar \u00e9 atrav\u00e9s da Microsoft Store, procurando a distro do seu interesse. Agora vamos as instala\u00e7\u00f5es das depend\u00eancias para o pyenv e poentry. Primeiro vamos dar um update no Linux. sudo apt-get update Ap\u00f3s finaliza\u00e7\u00e3o da atualiza\u00e7\u00e3o voc\u00ea vai instalar os pacotes do linux necess\u00e1rios sudo apt install -y build-essential git libexpat1-dev libssl-dev zlib1g-dev \\ libncurses5-dev libbz2-dev liblzma-dev \\ libsqlite3-dev libffi-dev tcl-dev linux-headers-generic libgdbm-dev \\ libreadline-dev tk tk-dev Ap\u00f3s finaliza\u00e7\u00e3o da deped\u00eancias, voc\u00ea deve clonar o pyenv curl https://pyenv.run | bash Agora vamos configurar o pyenv para carregar automaticamente no terminal echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc**** E utilizar o exec \"$SHELL\" para reiniciar o Shell, para atualizar as ultimas configura\u00e7\u00f5es Agora \u00e9 propriamente a etapa de configura\u00e7\u00e3o do pyenv: -Voc\u00ea pode utilizar o comando pyenv versions para verificar todas as vers\u00f5es de python instaladas; -Voc\u00ea pode utilizar o comando pyenv install -l para listar todas as vers\u00f5es que est\u00e3o dispon\u00edveis para instala\u00e7\u00e3o; -Voc\u00ea pode utilizar o comando pyenv install X.X para instalar a vers\u00e3o desejado (X.X seria a vers\u00e3o desejada. Ex: 3.11.7); -Voc\u00ea pode utilizar o comando pyenv global X.X para definir a vers\u00e3o desejada como global; -Voc\u00ea pode utilizar o comando pyenv local X.X para definir a vers\u00e3o desejada como local; Agora vamos instalar o pyenv: Voc\u00ea deve rodar o comando pyenv local X.X Para iniciar um projeto utilizando o poetry voc\u00ea pode usar o comando poetry new projeto , sendo projeto o nome que voc\u00ea deseja colocar Voc\u00ea pode acessar a pasta do seu projeto cd projeto , para ap\u00f3s rodar o comando code . assim voc\u00ea vai instalar um pacote que fara a conex\u00e3o do Visual Studio Code com seu WSL, para isso voc\u00ea deve ter o Visual Studio Code instalado no seu Windows, como tamb\u00e9m a exten\u00e7\u00e3o WSL . Posteriormente voc\u00ea pode utilizar o comando poetry config virtualenvs.in-project true , voc\u00ea est\u00e1 dizendo para o poetry que a pasta do ambiente virtual ficar\u00e1 dentro da pasta do projeto. Finalmente voc\u00ea pode utilizar o poetry shell para iniciar o ambiente virtual. Com isso voc\u00ea est\u00e1 pronto para come\u00e7ar o seu projeto.","title":"Guia de como instalar o WSL para utiliza\u00e7\u00e3o do Pyenv e Poetry em projetos de Desenvolvimento e/ou Dados"},{"location":"#espero-que-tenha-ajudado","text":"Para construir esse passo-a-passo segui os seguintes sites: - https://github.com/pyenv/pyenv - https://github.com/pyenv/pyenv Fiz tamb\u00e9m um v\u00eddeo mostrando o lado pr\u00e1tico deste no Youtube: Assista e esse v\u00eddeo","title":"Espero que tenha ajudado"},{"location":"#2o-segunda-etapa-instalacao-do-duckdb","text":"Para est\u00e1 etapa vou compartilhar um reposit\u00f3rio do Kaio Silva, que est\u00e1 explicando de forma simples e sensacional o passo-a-passo de isntala\u00e7\u00e3o: https://github.com/kaiohp/duckdb-on-linux","title":"2\u00ba Segunda Etapa: Instala\u00e7\u00e3o do DuckDB"},{"location":"#3o-terceira-etapa-instalacao-do-mkdocs","text":"","title":"3\u00ba Terceira Etapa: Instala\u00e7\u00e3o do MkDocs"},{"location":"#-instalando-o-mkdocs","text":"Para instalar o MkDocs \u00e9 bem simples basta voc\u00ea rodar o seguinte comando: poetry add mkdocs --dev","title":"-Instalando o MkDocs"},{"location":"#-configurando","text":"Basicamente voc\u00ea vai criar uma documenta\u00e7\u00e3o em MarkDown, para documentar todo seu projeto: Aqui est\u00e1 a Documenta\u00e7\u00e3o Para iniciar o uso do MkDocs, voc\u00ea deve rodar o comando poetry run mkdocs new . Basicamente ele vai criar uma estrutura de arquivos na pasta do seu projeto","title":"-Configurando"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. No arquivo mkdocs.yml \u00e9 a pesonaliza\u00e7\u00e3o da configura\u00e7\u00e3o do site(MkDocs) e na pasta docs voc\u00ea vai configurar as p\u00e1ginas. Assim voc\u00ea pode executar localmente a visualiza\u00e7\u00e3o da sua documenta\u00e7\u00e3o poetry run mkdocs serve Quando voc\u00ea construir da maneira que deseja, utilize o comando poetry run mkdocs build","title":"Project layout"},{"location":"teste/","text":"Pag\u00edna explicando Mini-Projeto de Teste Basicamente neste projeto, o objetivo \u00e9 testar o uso de 3 ferramentas, primeiramente gerar dados utilizando a biblioteca faker, duckdb e pandas . Sendo assim foi criado um gerador de dados, no arquivo gerador.py onde foi criado uma fun\u00e7\u00e3o para gerar dados, onde recebe os parametros: total de linhas que deseja gerar, total de cliente que deseja, e o nome do arquivo que deseja salvar. Nas pastas pandas e sql cont\u00e9m 2 testes simples de uso tanto do duckdb, retirando informa\u00e7\u00f5es desses dados, como tamb\u00e9m do utilizando o pandas.","title":"Projeto Teste"},{"location":"teste/#pagina-explicando-mini-projeto-de-teste","text":"Basicamente neste projeto, o objetivo \u00e9 testar o uso de 3 ferramentas, primeiramente gerar dados utilizando a biblioteca faker, duckdb e pandas . Sendo assim foi criado um gerador de dados, no arquivo gerador.py onde foi criado uma fun\u00e7\u00e3o para gerar dados, onde recebe os parametros: total de linhas que deseja gerar, total de cliente que deseja, e o nome do arquivo que deseja salvar. Nas pastas pandas e sql cont\u00e9m 2 testes simples de uso tanto do duckdb, retirando informa\u00e7\u00f5es desses dados, como tamb\u00e9m do utilizando o pandas.","title":"Pag\u00edna explicando Mini-Projeto de Teste"}]}